// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200528101747_InitialTable")]
    partial class InitialTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("API.Models.BaoHanh", b =>
                {
                    b.Property<int>("MaBh")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MaBH")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GiaBan")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaKh")
                        .HasColumnName("MaKH")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaNv")
                        .HasColumnName("MaNV")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaXe")
                        .HasColumnName("MaXE")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NgayMua")
                        .HasColumnType("date");

                    b.Property<int>("ThoiGian")
                        .HasColumnName("ThoiGian")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TrangThaiDaXoa")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaBh");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaNv");

                    b.HasIndex("MaXe")
                        .IsUnique();

                    b.ToTable("BaoHanh");
                });

            modelBuilder.Entity("API.Models.CtHdn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("GiaNhap")
                        .HasColumnType("REAL");

                    b.Property<int>("MaHdn")
                        .HasColumnName("MaHDN")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaKho")
                        .HasColumnName("MaKho")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaXe")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaHdn");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaXe")
                        .IsUnique();

                    b.ToTable("CT_HDN");
                });

            modelBuilder.Entity("API.Models.CtHdx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("GiaXuat")
                        .HasColumnType("REAL");

                    b.Property<int>("MaHdx")
                        .HasColumnName("MaHDX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaKho")
                        .HasColumnName("MaKho")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaXe")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaHdx");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaXe")
                        .IsUnique();

                    b.ToTable("CT_HDX");
                });

            modelBuilder.Entity("API.Models.CtKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaKho")
                        .HasColumnName("maKho")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaXe")
                        .HasColumnName("maXe")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaXe")
                        .IsUnique();

                    b.ToTable("CT_Kho");
                });

            modelBuilder.Entity("API.Models.Hdn", b =>
                {
                    b.Property<int>("MaHdn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MaHDN")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaNcc")
                        .HasColumnName("MaNCC")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaNv")
                        .HasColumnName("MaNV")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoTa")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("date");

                    b.Property<bool>("TrangThaiDaXoa")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaHdn");

                    b.HasIndex("MaNcc");

                    b.HasIndex("MaNv");

                    b.ToTable("HDN");
                });

            modelBuilder.Entity("API.Models.Hdx", b =>
                {
                    b.Property<int>("MaHdx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MaHDX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaKh")
                        .HasColumnName("MaKH")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaNv")
                        .HasColumnName("MaNV")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoTa")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("date");

                    b.Property<bool>("TrangThaiDaXoa")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaHdx");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaNv");

                    b.ToTable("HDX");
                });

            modelBuilder.Entity("API.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MaKH")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cmnd")
                        .HasColumnName("CMND")
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("DiaChi")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LienHe")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasColumnName("SDT")
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("TenKh")
                        .HasColumnName("TenKH")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("MaKh");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("API.Models.Kho", b =>
                {
                    b.Property<int>("MaKho")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("maKho")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiaChi")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NgungHoatDong")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenKho")
                        .HasColumnName("tenKho")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("MaKho");

                    b.ToTable("Kho");
                });

            modelBuilder.Entity("API.Models.LoaiXe", b =>
                {
                    b.Property<int>("MaLoaiXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DaNgungNhap")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenLoaiXe")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("MaLoaiXe");

                    b.ToTable("LoaiXe");
                });

            modelBuilder.Entity("API.Models.Ncc", b =>
                {
                    b.Property<int>("MaNcc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MaNCC")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiaChi")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<bool>("NgungCungCap")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sdt")
                        .HasColumnName("SDT")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenNcc")
                        .HasColumnName("TenNCC")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("MaNcc");

                    b.ToTable("NCC");
                });

            modelBuilder.Entity("API.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNv")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MaNV")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cmnd")
                        .HasColumnName("CMND")
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<bool>("DaNghiViec")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiaChi")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hinh")
                        .HasColumnType("TEXT");

                    b.Property<bool>("KichHoat")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaChucVu")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MatKhau")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasColumnName("SDT")
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("TenDangNhap")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenNv")
                        .HasColumnName("TenNV")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("MaNv");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("API.Models.Xe", b =>
                {
                    b.Property<int>("MaXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DaNgungBan")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaLoaiXe")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaNcc")
                        .HasColumnName("MaNCC")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SoKhung")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoMay")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenXe")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("MaXe");

                    b.HasIndex("MaLoaiXe");

                    b.HasIndex("MaNcc");

                    b.ToTable("Xe");
                });

            modelBuilder.Entity("API.Models.BaoHanh", b =>
                {
                    b.HasOne("API.Models.KhachHang", "KhachHang")
                        .WithMany("BaoHanh")
                        .HasForeignKey("MaKh")
                        .HasConstraintName("FK_BaoHanh_KhachHang")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("API.Models.NhanVien", "NhanVien")
                        .WithMany("BaoHanh")
                        .HasForeignKey("MaNv")
                        .HasConstraintName("FK_BaoHanh_NhanVien")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("API.Models.Xe", "Xe")
                        .WithOne("BaoHanh")
                        .HasForeignKey("API.Models.BaoHanh", "MaXe")
                        .HasConstraintName("FK_BaoHanh_Xe")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.CtHdn", b =>
                {
                    b.HasOne("API.Models.Hdn", "Hdn")
                        .WithMany("CtHdn")
                        .HasForeignKey("MaHdn")
                        .HasConstraintName("FK_CT_HDN_HDN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Kho", "Kho")
                        .WithMany("CtHdn")
                        .HasForeignKey("MaKho")
                        .HasConstraintName("FK_CT_HDN_Kho")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("API.Models.Xe", "Xe")
                        .WithOne("CtHdn")
                        .HasForeignKey("API.Models.CtHdn", "MaXe")
                        .HasConstraintName("FK_CT_HDN_Xe")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.CtHdx", b =>
                {
                    b.HasOne("API.Models.Hdx", "Hdx")
                        .WithMany("CtHdx")
                        .HasForeignKey("MaHdx")
                        .HasConstraintName("FK_CT_HDX_HDX")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Kho", "Kho")
                        .WithMany("CtHdx")
                        .HasForeignKey("MaKho")
                        .HasConstraintName("FK_CT_HDX_Kho")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("API.Models.Xe", "Xe")
                        .WithOne("CtHdx")
                        .HasForeignKey("API.Models.CtHdx", "MaXe")
                        .HasConstraintName("FK_CT_HDX_Xe")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.CtKho", b =>
                {
                    b.HasOne("API.Models.Kho", "Kho")
                        .WithMany("CtKho")
                        .HasForeignKey("MaKho")
                        .HasConstraintName("FK_CT_Kho_Kho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Xe", "Xe")
                        .WithOne("CtKho")
                        .HasForeignKey("API.Models.CtKho", "MaXe")
                        .HasConstraintName("FK_CT_Kho_Xe")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.Hdn", b =>
                {
                    b.HasOne("API.Models.Ncc", "Ncc")
                        .WithMany("Hdn")
                        .HasForeignKey("MaNcc")
                        .HasConstraintName("FK_HDN_NCC")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("API.Models.NhanVien", "NhanVien")
                        .WithMany("Hdn")
                        .HasForeignKey("MaNv")
                        .HasConstraintName("FK_HDN_NhanVien")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("API.Models.Hdx", b =>
                {
                    b.HasOne("API.Models.KhachHang", "KhachHang")
                        .WithMany("Hdx")
                        .HasForeignKey("MaKh")
                        .HasConstraintName("FK_HDX_KhachHang")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("API.Models.NhanVien", "NhanVien")
                        .WithMany("Hdx")
                        .HasForeignKey("MaNv")
                        .HasConstraintName("FK_HDX_NhanVien")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.Xe", b =>
                {
                    b.HasOne("API.Models.LoaiXe", "LoaiXe")
                        .WithMany("Xe")
                        .HasForeignKey("MaLoaiXe")
                        .HasConstraintName("FK_Xe_LoaiXe")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("API.Models.Ncc", "Ncc")
                        .WithMany("Xe")
                        .HasForeignKey("MaNcc")
                        .HasConstraintName("FK_Xe_NCC")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
